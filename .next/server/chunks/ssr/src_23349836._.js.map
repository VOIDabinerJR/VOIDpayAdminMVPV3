{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/constants/mock-api.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// üõë Nothing in here has anything to do with Nextjs, it's just a fake database\n////////////////////////////////////////////////////////////////////////////////\nimport { Withdrawal } from './data';\nimport { faker } from '@faker-js/faker';\nimport { matchSorter } from 'match-sorter'; // For filtering\nimport { App } from './data';\nimport { PaymentButton } from './data';\n\nimport { Refund, RefundsResponse } from './data';\n\n\n// @/constants/mock-api.ts\nexport const mockPaymentButtons = {\n  getPaymentButtons: async (filters: {\n    page: number;\n    limit: number;\n    status?: string;\n    search?: string;\n  }) => {\n    // Full mock data array\n   const allButtons: PaymentButton[] = [\n      {\n        id: 'btn_001',\n        name: 'Premium Subscription',\n        buttonToken: 'VOID-b0eb1910-5de6-4b83-a5e3-311fc0884844',\n        destination: null,\n        appId: 13,\n        createdAt: '2025-06-06T18:52:12.000Z',\n        status: 'pending', // Changed to 'pending' to match needsActivation\n        needsActivation: true,\n        webhookUrl: 'https://api.example.com/webhooks/payments',\n        clientSecret: 'sk_test_xyz123',\n        transactionsCount: 0,\n        lastUsedAt: null\n      },\n      {\n        id: 'btn_002',\n        name: 'Donation Button',\n        buttonToken: 'VOID-c1fc2911-6ef7-5c94-b6f4-422fd1995955',\n        destination: 'charity@org.com',\n        appId: 13,\n        createdAt: '2025-06-10T09:15:33.000Z',\n        status: 'active',\n        transactionsCount: 42,\n        lastUsedAt: '2025-06-17T14:22:09.000Z'\n      },\n      {\n        id: 'btn_003',\n        name: 'E-commerce Checkout',\n        buttonToken: 'VOID-d2gd3022-7gh8-6d05-c7g5-533ge2107066',\n        destination: 'store@merchant.com',\n        appId: 14,\n        createdAt: '2025-06-15T11:08:57.000Z',\n        status: 'active',\n        transactionsCount: 128,\n        lastUsedAt: '2025-06-18T10:45:21.000Z'\n      },\n      {\n        id: 'btn_004',\n        name: 'Service Payment',\n        buttonToken: 'VOID-e3he4133-8hi9-7e16-d8h6-644hf3218177',\n        destination: 'services@company.com',\n        appId: 15,\n        createdAt: '2025-06-18T08:30:45.000Z',\n        status: 'active',\n        transactionsCount: 56,\n        lastUsedAt: '2025-06-18T12:15:30.000Z'\n      },\n      {\n        id: 'btn_005',\n        name: 'Event Ticket',\n        buttonToken: 'VOID-f4if5244-9ij0-8f27-e9i7-755ig4329288',\n        destination: 'events@org.com',\n        appId: 13,\n        createdAt: '2025-06-19T10:20:15.000Z',\n        status: 'pending', // Changed to 'pending' to match needsActivation\n        needsActivation: true,\n        transactionsCount: 0,\n        lastUsedAt: null\n      }\n    ];\n\n\n    // Apply filters\n    let filteredButtons = allButtons;\n    \n    if (filters.status) {\n      filteredButtons = filteredButtons.filter(\n        button => button.status === filters.status\n      );\n    }\n    \n    \n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      filteredButtons = filteredButtons.filter(\n        button => button.name.toLowerCase().includes(searchTerm) || \n                button.buttonToken.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Apply pagination\n    const startIndex = (filters.page - 1) * filters.limit;\n    const endIndex = startIndex + filters.limit;\n    const paginatedButtons = filteredButtons.slice(startIndex, endIndex);\n\n    // Simulate API response format\n    return {\n      total_buttons: filteredButtons.length,\n      buttons: paginatedButtons,\n      page: filters.page,\n      per_page: filters.limit,\n      total_pages: Math.ceil(filteredButtons.length / filters.limit)\n    };\n  }\n};\n// Dados mockados de reembolsos\nconst refundsData: Refund[] = [\n  {\n    id: 'REF-2023-001',\n    transaction_id: 'TXN-1001',\n    amount: 1500.0,\n    currency: 'MZN',\n    type: 'full',\n    status: 'completed',\n    payment_method: 'credit_card',\n    reason: 'Produto n√£o entregue',\n    created_at: '2023-05-15T10:30:00Z',\n    processed_at: '2023-05-16T09:15:00Z',\n    approved_by: 'admin1',\n    approved_at: '2023-05-15T14:45:00Z',\n    customer: {\n      id: 'CUST-001',\n      name: 'Maria Jo√£o',\n      email: 'maria.joao@example.com'\n    },\n    original_transaction: {\n      id: 'TXN-1001',\n      amount: 1500.0,\n      reference: 'Compra de eletr√¥nicos',\n      date: '2023-05-10T08:45:00Z'\n    },\n    metadata: {\n      admin_notes: 'Cliente confirmou n√£o recebimento',\n      customer_notes: 'Aguardava h√° 2 semanas'\n    }\n  },\n  {\n    id: 'REF-2023-002',\n    transaction_id: 'TXN-1005',\n    amount: 750.5,\n    currency: 'MZN',\n    type: 'partial',\n    status: 'processing',\n    payment_method: 'pix',\n    reason: 'Produto com defeito',\n    created_at: '2023-05-18T16:20:00Z',\n    customer: {\n      id: 'CUST-002',\n      name: 'Carlos Silva',\n      email: 'carlos.silva@example.com'\n    },\n    original_transaction: {\n      id: 'TXN-1005',\n      amount: 1500.0,\n      reference: 'Compra de m√≥veis',\n      date: '2023-05-12T11:30:00Z'\n    }\n  },\n  {\n    id: 'REF-2023-003',\n    transaction_id: 'TXN-1010',\n    amount: 2000.0,\n    currency: 'MZN',\n    type: 'full',\n    status: 'pending_approval',\n    payment_method: 'bank_transfer',\n    reason: 'Cancelamento de servi√ßo',\n    created_at: '2023-05-20T09:10:00Z',\n    customer: {\n      id: 'CUST-003',\n      name: 'Ana Paula',\n      email: 'ana.paula@example.com'\n    },\n    original_transaction: {\n      id: 'TXN-1010',\n      amount: 2000.0,\n      reference: 'Assinatura anual',\n      date: '2023-05-01T07:00:00Z'\n    }\n  },\n  {\n    id: 'REF-2023-004',\n    transaction_id: 'TXN-1015',\n    amount: 500.0,\n    currency: 'MZN',\n    type: 'partial',\n    status: 'failed',\n    payment_method: 'debit_card',\n    reason: 'Desist√™ncia da compra',\n    created_at: '2023-05-22T14:35:00Z',\n    processed_at: '2023-05-23T10:20:00Z',\n    customer: {\n      id: 'CUST-004',\n      name: 'Jos√© Ant√≥nio',\n      email: 'jose.antonio@example.com'\n    },\n    original_transaction: {\n      id: 'TXN-1015',\n      amount: 1000.0,\n      reference: 'Compra de roupas',\n      date: '2023-05-18T13:15:00Z'\n    },\n    metadata: {\n      admin_notes: 'Falha na comunica√ß√£o com o banco'\n    }\n  }\n];\n\nexport const mockRefunds = {\n  getRefunds: async (filters: {\n    page?: number;\n    limit?: number;\n    status?: string;\n    type?: string;\n    search?: string;\n  }): Promise<RefundsResponse> => {\n    // Filtragem dos dados\n    let filteredData = [...refundsData];\n\n    // Filtro por status\n    if (filters.status) {\n      filteredData = filteredData.filter(\n        (refund) => refund.status === filters.status\n      );\n    }\n\n    // Filtro por tipo\n    if (filters.type) {\n      filteredData = filteredData.filter(\n        (refund) => refund.type === filters.type\n      );\n    }\n\n    // Filtro por pesquisa (ID, transaction_id ou nome do cliente)\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      filteredData = filteredData.filter(\n        (refund) =>\n          refund.id.toLowerCase().includes(searchTerm) ||\n          refund.transaction_id.toLowerCase().includes(searchTerm) ||\n          refund.customer.name.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Pagina√ß√£o\n    const page = filters.page || 1;\n    const limit = filters.limit || 10;\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedData = filteredData.slice(startIndex, endIndex);\n\n    // Calcular total amount\n    const totalAmount = filteredData.reduce(\n      (sum, refund) => sum + refund.amount,\n      0\n    );\n\n    return {\n      total_refunds: filteredData.length,\n      total_amount: totalAmount,\n      refunds: paginatedData,\n      page: page,\n      limit: limit\n    };\n  },\n\n  // M√©todo adicional para obter um reembolso espec√≠fico\n  getRefundById: async (id: string): Promise<Refund | undefined> => {\n    return refundsData.find((refund) => refund.id === id);\n  },\n\n  // M√©todo para atualizar status de um reembolso\n  updateRefundStatus: async (\n    id: string,\n    status: Refund['status'],\n    approvedBy?: string\n  ): Promise<Refund | undefined> => {\n    const refundIndex = refundsData.findIndex((refund) => refund.id === id);\n\n    if (refundIndex !== -1) {\n      const updatedRefund = {\n        ...refundsData[refundIndex],\n        status,\n        approved_by: approvedBy,\n        approved_at:\n          status === 'completed' ? new Date().toISOString() : undefined,\n        processed_at: ['completed', 'failed'].includes(status)\n          ? new Date().toISOString()\n          : refundsData[refundIndex].processed_at\n      };\n\n      refundsData[refundIndex] = updatedRefund;\n      return updatedRefund;\n    }\n\n    return undefined;\n  }\n};\n\nexport const delay = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n\n// Define the shape of Product data\nexport type Product = {\n  photo_url: string;\n  name: string;\n  description: string;\n  created_at: string;\n  price: number;\n  id: number;\n  category: string;\n  updated_at: string;\n  quantidade: number; // Novo campo\n  payment_link: string; // Novo campo\n};\n\n// Mock product data store\nexport const fakeProducts = {\n  records: [] as Product[], // Holds the list of product objects\n\n  // Initialize with sample data\n  initialize() {\n    const sampleProducts: Product[] = [];\n    function generateRandomProductData(id: number): Product {\n      const categories = [\n        'Electronics',\n        'Furniture',\n        'Clothing',\n        'Toys',\n        'Groceries',\n        'Books',\n        'Jewelry',\n        'Beauty Products'\n      ];\n\n      const name = faker.commerce.productName();\n\n      return {\n        id,\n        name,\n        description: faker.commerce.productDescription(),\n        created_at: faker.date\n          .between({ from: '2022-01-01', to: '2023-12-31' })\n          .toISOString(),\n        price: parseFloat(faker.commerce.price({ min: 5, max: 500, dec: 2 })),\n        photo_url: `https://api.slingacademy.com/public/sample-products/${id}.png`,\n        category: faker.helpers.arrayElement(categories),\n        updated_at: faker.date.recent().toISOString(),\n        quantidade: faker.number.int({ min: 1, max: 100 }), // Valor entre 1 e 100\n        payment_link: `https://pay.voidpay.com/checkout/${id}-${name.replace(/\\s+/g, '-').toLowerCase()}`\n      };\n    }\n\n    // Generate remaining records\n    for (let i = 1; i <= 20; i++) {\n      sampleProducts.push(generateRandomProductData(i));\n    }\n\n    this.records = sampleProducts;\n  },\n\n  // Get all products with optional category filtering and search\n  async getAll({\n    categories = [],\n    search\n  }: {\n    categories?: string[];\n    search?: string;\n  }) {\n    let products = [...this.records];\n\n    // Filter products based on selected categories\n    if (categories.length > 0) {\n      products = products.filter((product) =>\n        categories.includes(product.category)\n      );\n    }\n\n    // Search functionality across multiple fields\n    if (search) {\n      products = matchSorter(products, search, {\n        keys: ['name', 'description', 'category']\n      });\n    }\n\n    return products;\n  },\n\n  // Get paginated results with optional category filtering and search\n  async getProducts({\n    page = 1,\n    limit = 10,\n    categories,\n    search\n  }: {\n    page?: number;\n    limit?: number;\n    categories?: string;\n    search?: string;\n  }) {\n    await delay(1000);\n    const categoriesArray = categories ? categories.split('.') : [];\n    const allProducts = await this.getAll({\n      categories: categoriesArray,\n      search\n    });\n    const totalProducts = allProducts.length;\n\n    // Pagination logic\n    const offset = (page - 1) * limit;\n    const paginatedProducts = allProducts.slice(offset, offset + limit);\n\n    // Mock current time\n    const currentTime = new Date().toISOString();\n\n    // Return paginated response\n    return {\n      success: true,\n      time: currentTime,\n      message: 'Sample data for testing and learning purposes',\n      total_products: totalProducts,\n      offset,\n      limit,\n      products: paginatedProducts\n    };\n  },\n\n  // Get a specific product by its ID\n  async getProductById(id: number) {\n    await delay(1000); // Simulate a delay\n\n    // Find the product by its ID\n    const product = this.records.find((product) => product.id === id);\n\n    if (!product) {\n      return {\n        success: false,\n        message: `Product with ID ${id} not found`\n      };\n    }\n\n    // Mock current time\n    const currentTime = new Date().toISOString();\n\n    return {\n      success: true,\n      time: currentTime,\n      message: `Product with ID ${id} found`,\n      product\n    };\n  }\n};\n\nexport const mockWithdrawals = {\n  getWithdrawals: async (filters: {\n    page: number;\n    limit: number;\n    status?: string;\n    method?: string;\n    search?: string;\n  }) => {\n    // Simula um delay de rede\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    // Dados mockados de exemplo\n    const allWithdrawals: Withdrawal[] = [\n      {\n        id: 'wd_123456',\n        amount: 1500.5,\n        method: 'mpesa',\n        destination: '84 1234 5678',\n        destination_name: 'Jo√£o Silva',\n        status: 'completed',\n        created_at: '2023-10-15T10:30:00Z',\n        reference: 'Pagamento de servi√ßos',\n        fee: 15.01,\n        net_amount: 1485.49\n      },\n      {\n        id: 'wd_789012',\n        amount: 2500.0,\n        method: 'bank',\n        destination: 'Banco BIM - Conta 1234567',\n        destination_name: 'Maria Souza',\n        status: 'processing',\n        created_at: '2023-10-16T14:45:00Z',\n        reference: 'Transfer√™ncia mensal',\n        fee: 25.0,\n        net_amount: 2475.0\n      }\n      // Adicione mais exemplos conforme necess√°rio\n    ];\n\n    // Aplica filtros\n    let filtered = allWithdrawals;\n\n    if (filters.status) {\n      filtered = filtered.filter((w) => w.status === filters.status);\n    }\n\n    if (filters.method) {\n      filtered = filtered.filter((w) => w.method === filters.method);\n    }\n\n    if (filters.search) {\n      const search = filters.search.toLowerCase();\n      filtered = filtered.filter(\n        (w) =>\n          w.id.toLowerCase().includes(search) ||\n          w.destination.toLowerCase().includes(search) ||\n          (w.destination_name &&\n            w.destination_name.toLowerCase().includes(search)) ||\n          (w.reference && w.reference.toLowerCase().includes(search))\n      );\n    }\n\n    // Pagina√ß√£o\n    const start = (filters.page - 1) * filters.limit;\n    const end = start + filters.limit;\n    const paginated = filtered.slice(start, end);\n\n    return {\n      withdrawals: paginated,\n      total_withdrawals: filtered.length,\n      page: filters.page,\n      limit: filters.limit\n    };\n  }\n};\n\nexport const mockApps = {\n  getApps: async (filters: any) => {\n    // Simula√ß√£o de delay de API\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    const mockData: App[] = [\n      {\n        id: 'app_1',\n        name: 'E-commerce Store',\n        description: 'Main online store integration',\n        client_id: 'client_123456',\n        status: 'active',\n        environment: 'production',\n        created_at: '2023-01-15',\n        updated_at: '2023-06-20',\n        last_used: '2023-06-25T14:30:00Z',\n        webhook_url: 'https://store.com/api/webhooks',\n        ip_restrictions: ['192.168.1.1'],\n        permissions: ['payments_read', 'payments_write']\n      },\n      {\n        id: 'app_2',\n        name: 'Mobile App',\n        description: 'Android application',\n        client_id: 'client_789012',\n        status: 'active',\n        environment: 'sandbox',\n        created_at: '2023-03-10',\n        updated_at: '2023-06-18',\n        last_used: '2023-06-24T09:15:00Z',\n        permissions: ['payments_read']\n      },\n      {\n        id: 'app_3',\n        name: 'POS System',\n        description: 'Point of Sale terminal integration',\n        client_id: 'client_345678',\n        status: 'active',\n        environment: 'production',\n        created_at: '2023-02-28',\n        updated_at: '2023-06-22',\n        last_used: '2023-06-23T16:45:00Z',\n        webhook_url: 'https://pos.example.com/webhook',\n        ip_restrictions: ['10.0.0.1', '10.0.0.2'],\n        permissions: ['payments_read', 'payments_write', 'refunds']\n      },\n      {\n        id: 'app_4',\n        name: 'Booking Platform',\n        description: 'Hotel reservation system',\n        client_id: 'client_901234',\n        status: 'inactive',\n        environment: 'production',\n        created_at: '2022-11-05',\n        updated_at: '2023-05-30',\n        last_used: '2023-05-28T11:20:00Z',\n        permissions: ['payments_read']\n      },\n      {\n        id: 'app_5',\n        name: 'Subscription Service',\n        description: 'Recurring billing system',\n        client_id: 'client_567890',\n        status: 'active',\n        environment: 'sandbox',\n        created_at: '2023-04-15',\n        updated_at: '2023-06-19',\n        last_used: '2023-06-21T13:10:00Z',\n        webhook_url: 'https://subs.example.com/api/events',\n        ip_restrictions: ['172.16.0.5'],\n        permissions: ['payments_read', 'subscriptions']\n      },\n      {\n        id: 'app_6',\n        name: 'Marketplace',\n        description: 'Multi-vendor platform',\n        client_id: 'client_123789',\n        status: 'active',\n        environment: 'production',\n        created_at: '2023-01-30',\n        updated_at: '2023-06-15',\n        last_used: '2023-06-20T10:05:00Z',\n        webhook_url: 'https://marketplace.com/webhooks/payments',\n        ip_restrictions: ['192.168.2.10', '192.168.2.11'],\n        permissions: ['payments_read', 'payments_write', 'disputes']\n      }\n    ];\n    // Aplicar filtros\n    let filteredData = [...mockData];\n\n    if (filters.search) {\n      filteredData = filteredData.filter(\n        (app) =>\n          app.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n          app.description?.toLowerCase().includes(filters.search.toLowerCase())\n      );\n    }\n\n    // Pagina√ß√£o correta\n    const page = filters.page || 1;\n    const limit = filters.limit || 10;\n    const startIndex = (page - 1) * limit;\n    const paginatedData = filteredData.slice(startIndex, startIndex + limit);\n\n    return {\n      total_apps: filteredData.length,\n      apps: paginatedData,\n      page,\n      limit,\n      total_pages: Math.ceil(filteredData.length / limit)\n    };\n  }\n};\n// Initialize sample products\nfakeProducts.initialize();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/features/overview/components/area-graph.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaymentMethodsAreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaymentMethodsAreaChart() from the server but PaymentMethodsAreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/features/overview/components/area-graph.tsx <module evaluation>\",\n    \"PaymentMethodsAreaChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,iFACA","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/features/overview/components/area-graph.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaymentMethodsAreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaymentMethodsAreaChart() from the server but PaymentMethodsAreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/features/overview/components/area-graph.tsx\",\n    \"PaymentMethodsAreaChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,6DACA","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/app/dashboard/overview/%40area_stats/page.tsx"],"sourcesContent":["import { delay } from '@/constants/mock-api';\nimport { PaymentMethodsAreaChart } from '@/features/overview/components/area-graph';\n\nexport default async function AreaStats() {\n  await await delay(2000);\n  return <PaymentMethodsAreaChart />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,MAAM,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;IAClB,qBAAO,8OAAC,2JAAA,CAAA,0BAAuB;;;;;AACjC","debugId":null}}]
}