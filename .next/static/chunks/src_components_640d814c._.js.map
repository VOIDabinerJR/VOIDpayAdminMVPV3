{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/components/active-theme.tsx"],"sourcesContent":["'use client';\n\nimport {\n  ReactNode,\n  createContext,\n  useContext,\n  useEffect,\n  useState\n} from 'react';\n\nconst COOKIE_NAME = 'active_theme';\nconst DEFAULT_THEME = 'default';\n\nfunction setThemeCookie(theme: string) {\n  if (typeof window === 'undefined') return;\n\n  document.cookie = `${COOKIE_NAME}=${theme}; path=/; max-age=31536000; SameSite=Lax; ${window.location.protocol === 'https:' ? 'Secure;' : ''}`;\n}\n\ntype ThemeContextType = {\n  activeTheme: string;\n  setActiveTheme: (theme: string) => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ActiveThemeProvider({\n  children,\n  initialTheme\n}: {\n  children: ReactNode;\n  initialTheme?: string;\n}) {\n  const [activeTheme, setActiveTheme] = useState<string>(\n    () => initialTheme || DEFAULT_THEME\n  );\n\n  useEffect(() => {\n    setThemeCookie(activeTheme);\n\n    Array.from(document.body.classList)\n      .filter((className) => className.startsWith('theme-'))\n      .forEach((className) => {\n        document.body.classList.remove(className);\n      });\n    document.body.classList.add(`theme-${activeTheme}`);\n    if (activeTheme.endsWith('-scaled')) {\n      document.body.classList.add('theme-scaled');\n    }\n  }, [activeTheme]);\n\n  return (\n    <ThemeContext.Provider value={{ activeTheme, setActiveTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useThemeConfig() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\n      'useThemeConfig must be used within an ActiveThemeProvider'\n    );\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUA,MAAM,cAAc;AACpB,MAAM,gBAAgB;AAEtB,SAAS,eAAe,KAAa;IACnC,uCAAmC;;IAAM;IAEzC,SAAS,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,MAAM,0CAA0C,EAAE,OAAO,QAAQ,CAAC,QAAQ,KAAK,WAAW,YAAY,IAAI;AAChJ;AAOA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,oBAAoB,EAClC,QAAQ,EACR,YAAY,EAIb;;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;wCAC3C,IAAM,gBAAgB;;IAGxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,eAAe;YAEf,MAAM,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAC/B,MAAM;iDAAC,CAAC,YAAc,UAAU,UAAU,CAAC;gDAC3C,OAAO;iDAAC,CAAC;oBACR,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACjC;;YACF,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,aAAa;YAClD,IAAI,YAAY,QAAQ,CAAC,YAAY;gBACnC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;YAC9B;QACF;wCAAG;QAAC;KAAY;IAEhB,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAa;QAAe;kBACzD;;;;;;AAGP;GA9BgB;KAAA;AAgCT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT;IARgB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/components/layout/providers.tsx"],"sourcesContent":["'use client';\nimport { ClerkProvider } from '@clerk/nextjs';\nimport { dark } from '@clerk/themes';\nimport { useTheme } from 'next-themes';\nimport React from 'react';\nimport { ActiveThemeProvider } from '../active-theme';\n\nexport default function Providers({\n  activeThemeValue,\n  children\n}: {\n  activeThemeValue: string;\n  children: React.ReactNode;\n}) {\n  // we need the resolvedTheme value to set the baseTheme for clerk based on the dark or light theme\n  const { resolvedTheme } = useTheme();\n\n  return (\n    <>\n      <ActiveThemeProvider initialTheme={activeThemeValue}>\n        <ClerkProvider\n          appearance={{\n            baseTheme: resolvedTheme === 'dark' ? dark : undefined\n          }}\n        >\n          {children}\n        </ClerkProvider>\n      </ActiveThemeProvider>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;;;AALA;;;;;AAOe,SAAS,UAAU,EAChC,gBAAgB,EAChB,QAAQ,EAIT;;IACC,kGAAkG;IAClG,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE;kBACE,cAAA,6LAAC,wIAAA,CAAA,sBAAmB;YAAC,cAAc;sBACjC,cAAA,6LAAC,4KAAA,CAAA,gBAAa;gBACZ,YAAY;oBACV,WAAW,kBAAkB,SAAS,sKAAA,CAAA,OAAI,GAAG;gBAC/C;0BAEC;;;;;;;;;;;;AAKX;GAvBwB;;QAQI,mJAAA,CAAA,WAAQ;;;KARZ","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/components/ui/sonner.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from 'next-themes';\nimport { Toaster as Sonner, ToasterProps } from 'sonner';\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = 'system' } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps['theme']}\n      className='toaster group'\n      style={\n        {\n          '--normal-bg': 'var(--popover)',\n          '--normal-text': 'var(--popover-foreground)',\n          '--normal-border': 'var(--border)'\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/GitHub/VOIDpayAdminMVPV3/src/components/layout/ThemeToggle/theme-provider.tsx"],"sourcesContent":["'use client';\n\nimport {\n  ThemeProvider as NextThemesProvider,\n  ThemeProviderProps\n} from 'next-themes';\n\nexport default function ThemeProvider({\n  children,\n  ...props\n}: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAOe,SAAS,cAAc,EACpC,QAAQ,EACR,GAAG,OACgB;IACnB,qBAAO,6LAAC,mJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC;KALwB","debugId":null}}]
}